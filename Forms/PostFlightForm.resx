<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="message.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAAAAEACABoBQAANgAAABAQAAABABgAaAMAAJ4FAAAQEAAAAQAgAGgEAAAGCQAAKAAAABAA
        AAAgAAAAAQAIAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAEAAAAAAAAYD+gAHRToACAX6AAlHekAKyLpAC0l
        6gAxKeoAODDrAD426wBAOewARj/sAEhB7ABLRO0ATkftAFFK7QBTTe0AVk/uAFtV7gBeWO8AYVvvAGRe
        7wBsZvAAdG/xAHx38gB/evIAhH/yAIqF8wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wAAAAAAAAAAAAAABwEMAAAAAAAAAAAA
        AAAQAQEBAQAAAAAAAAAAAAACAQEBAQEQAAAAAAAAABUBAQEBAQEBAQAAAAAAAAwCAQEBAQEBAQEAAAAA
        ABkMCQkLCwkEDAYBEwAAAAAAAAAAAAAAAAAAFwAAAAAAAAEBAQEGAAAAAAAAAAADAAABAQEMAAAHBwAA
        AAAJAQAAEAECAAAMDAQAAAAAAQESAAAAABYAAAAZBwAAAAADAQEBAQEBAQECAQEBAQkAABUBAQEBAQEB
        AQEBAQEHAAAAABUBAQEBAQEBAQEBBwAAAAAAABsJAQEBAQEBAgoAAAAAAAAAAAAAGBAMBgMA/8cAAP8H
        AAD+AwAA+AMAAPADAADgAQAA//sAAPB/AACwzwAAMY8AAB7nAACAAAAAwAAAAPAAAAD8AAAA/8EAACgA
        AAAQAAAAIAAAAAEAGAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAwKOoYD+hIQewAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTTe0YD+gYD+gY
        D+gYD+gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdFOgYD+gYD+gYD+gYD+gYD+hRSu0AAAAA
        AAAAAAAAAAAAAAAAAAAAAABkXu8YD+gYD+gYD+gYD+gYD+gYD+gYD+gYD+gAAAAAAAAAAAAAAAAAAAAA
        AABOR+0YD+gYD+gYD+gYD+gYD+gYD+gYD+gYD+gYD+gAAAAAAAAAAAAAAAAAAAB/evJGP+w+Nus+NutG
        P+xGP+w4MOsrIulGP+wtJeoYD+heWO8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAB0b/EAAAAAAAAAAAAAAAAAAAAAAAAYD+gYD+gYD+gYD+gtJeoAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAgF+gAAAAAAAAYD+gYD+gYD+hLRO0AAAAAAAAzK+ozK+oAAAAAAAAAAAAAAAA+NusYD+gAAAAA
        AABTTe0YD+gYD+gAAAAAAABLRO1GP+wlHekAAAAAAAAAAAAAAAAYD+gYD+hbVe4AAAAAAAAAAAAAAABs
        ZvAAAAAAAAAAAACEf/IwKOoAAAAAAAAAAAAAAAAgF+gYD+gYD+gYD+gYD+gYD+gYD+gYD+gYD+gYD+gY
        D+gYD+gYD+gYD+g+NusAAAAAAABhW+8YD+gYD+gYD+gYD+gYD+gYD+gYD+gYD+gYD+gYD+gYD+gYD+gz
        K+oAAAAAAAAAAAAAAABhW+8YD+gYD+gYD+gYD+gYD+gYD+gYD+gYD+gYD+gYD+gzK+oAAAAAAAAAAAAA
        AAAAAAAAAACKhfM4MOsYD+gYD+gYD+gYD+gYD+gYD+gYD+hAOewAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAB8d/JWT+5GP+wwKOogF+gAAAD/xwAA/wcAAP4DAAD4AwAA8AMAAOABAAD/+wAA8H8AALDP
        AAAxjwAAHucAAIAAAADAAAAA8AAAAPwAAAD/wQAAKAAAABAAAAAgAAAAAQAgAAAAAABABAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgP6FcYD+jkGA/o/xgP
        6MkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGA/oJxgP6L0YD+j/GA/o/xgP
        6P8YD+j/GA/oSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGA/oexgP6PkYD+j/GA/o/xgP
        6P8YD+j/GA/o/xgP6MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYD+gJGA/oqxgP6P8YD+j/GA/o/xgP
        6P8YD+j/GA/o/xgP6P8YD+j/GA/oJwAAAAAAAAAAAAAAAAAAAAAYD+gJGA/owxgP6P8YD+j/GA/o/xgP
        6P8YD+j/GA/o/xgP6P8YD+j/GA/o/xgP6H4AAAAAAAAAAAAAAAAAAAAAGA/ojRgP6MwYD+jVGA/o1RgP
        6MwYD+jMGA/o2xgP6OoYD+jMGA/o5xgP6P8YD+ixAAAAAAAAAAAAAAAAAAAAABgP6AMYD+gzGA/oRRgP
        6GwYD+gzGA/oGwAAAAAYD+hUGA/oAxgP6DkYD+iZGA/oLQAAAAAAAAAAGA/oSwAAAAAYD+h4GA/o/xgP
        6P8YD+j/GA/o/xgP6OcYD+gGGA/oQhgP6GMAAAAAGA/ochgP6C0AAAAAGA/oLRgP6PYYD+gSGA/oURgP
        6P8YD+j/GA/o/xgP6MYYD+gbGA/oORgP6OEYD+jhGA/oBhgP6GAYD+g8AAAAABgP6NUYD+j/GA/oSxgP
        6AwYD+i9GA/o/xgP6P8YD+gzGA/oAxgP6MYYD+jMGA/o8BgP6GkYD+gGGA/oIQAAAAAYD+j/GA/o/xgP
        6LQYD+gzGA/oYxgP6C0YD+gbGA/oohgP6CoAAAAAAAAAABgP6IcYD+jkGA/oBgAAAAAAAAAAGA/oexgP
        6PYYD+j/GA/o/xgP6P8YD+j/GA/o/xgP6P8YD+j/GA/o/xgP6P8YD+j/GA/o/xgP6P8YD+j/GA/o1QAA
        AAAYD+ghGA/orhgP6P8YD+j/GA/o/xgP6P8YD+j/GA/o/xgP6P8YD+j/GA/o/xgP6P8YD+j/GA/o/xgP
        6OEAAAAAAAAAAAAAAAAYD+g/GA/orhgP6P8YD+j/GA/o/xgP6P8YD+j/GA/o/xgP6P8YD+j/GA/o/xgP
        6P8YD+jhAAAAAAAAAAAAAAAAAAAAAAAAAAAYD+gYGA/ogRgP6NsYD+j/GA/o/xgP6P8YD+j/GA/o/xgP
        6P8YD+j/GA/o0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGA/oGBgP6FQYD+iQGA/ouhgP
        6MwYD+jkGA/o9hgP6Gz/hwAA/gMAAPwDAADwAQAA4AEAAOABAADgQQAAoAkAAAABAAAAAQAAAGMAAAAA
        AACAAAAA4AAAAPgAAAD/AAAA
</value>
  </data>
</root>